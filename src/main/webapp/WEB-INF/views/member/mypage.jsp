<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8" %>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>
<%@ taglib uri="http://java.sun.com/jsp/jstl/fmt" prefix="fmt" %>
<%@ taglib uri="http://java.sun.com/jsp/jstl/functions" prefix="fn" %>
<!DOCTYPE html>
<html lang="ko">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>ÎßàÏù¥ÌéòÏù¥ÏßÄ | EduMate</title>
        <link rel="stylesheet" href="/resources/css/common/header.css">
        <link rel="stylesheet" href="/resources/css/common/footer.css">
        <link rel="stylesheet" href="/resources/css/member/mypage.css">
        <link rel="stylesheet" href="/resources/css/common/main_banner.css">
        <script src="https://js.tosspayments.com/v1/payment"></script>
    </head>
    <body>
        <div class="main-container">
            <!-- Header Include -->
            <jsp:include page="../common/header.jsp"/>


            <section class="main-banner">
                <div class="banner-text">
                    ÎßàÏù¥ÌéòÏù¥ÏßÄ
                </div>
                <div class="object">
                    <img src="/resources/images/member/mypage.png" alt="ÎßàÏù¥ÌéòÏù¥ÏßÄ ÏïÑÏù¥ÏΩò">
                </div>
            </section>

            <!-- Î©îÏù∏ ÏΩòÌÖêÏ∏† -->
            <div class="main-content">
                <div class="mypage-content">

                    <!-- ÌîÑÎ°úÌïÑ ÏÑπÏÖò -->
                    <div class="profile-section">
                        <img class="profile-image" src="/resources/images/common/mypage1.png" alt="">
                        <div class="profile-info">
                            <div class="user-grade">${memberType}</div>
                            <div class="user-name">
                                <c:choose>
                                    <c:when test="${not empty memberInfo.memberName}">
                                        ${memberInfo.memberName}Îãò
                                    </c:when>
                                    <c:otherwise>
                                        ${sessionScope.loginId}Îãò
                                    </c:otherwise>
                                </c:choose>
                            </div>
                            <div class="stats-container">
                                <div class="stat-item">
                                    <div class="stat-number"><fmt:formatNumber value="${memberInfo.memberMoney}"
                                                                               pattern="#,###"/></div>
                                    <div class="stat-label">ÏûîÍ≥†</div>
                                </div>
                                <div class="stat-item">
                                    <div class="stat-number">${requestCount + questionCount}</div>
                                    <div class="stat-label">ÏûëÏÑ±Í∏Ä Ïàò</div>
                                </div>
                                <div class="stat-item">
                                    <div class="stat-number">${requestCommentCount + questionCommentCount}</div>
                                    <div class="stat-label">ÎåìÍ∏Ä Ïàò</div>
                                </div>
                            </div>
                        </div>
                    </div>


                    <c:choose>
                        <c:when test="${sessionScope.teacherYn eq 'N' && sessionScope.adminYn eq 'N'}">
                            <!-- ÌòÑÏû¨ ÏàòÍ∞ïÏ§ëÏù∏ Í∞ïÏùò -->
                            <div class="section">
                                <div class="section-header">
                                    <h2 class="section-title">ÌòÑÏû¨ ÏàòÍ∞ïÏ§ëÏù∏ Í∞ïÏùò</h2>
                                    <!-- Í≤ÄÏÉâ Î∞ïÏä§Î•º header ÏïàÏúºÎ°ú Ïù¥Îèô -->
                                    <div class="course-search-box">
                                        <input type="text" id="courseSearchInput" placeholder="Í∞ïÏùòÎ™Ö, Í∞ïÏÇ¨Î™ÖÏùÑ ÏûÖÎ†•ÌïòÏÑ∏Ïöî"
                                               onkeypress="handleCourseSearchEnter(event)">
                                        <button onclick="searchCourses()">üîç</button>
                                    </div>
                                </div>

                                <div class="course-content" id="courseContent">
                                    <c:choose>
                                        <c:when test="${not empty lectureList}">
                                            <c:forEach items="${lectureList}" var="lecture" varStatus="status">
                                                <a href="/lecture/player?videoNo=${recentVideoMap[lecture.lectureNo]}"
                                                   class="course-item ${status.index >= 3 ? 'hidden-course' : ''}"
                                                   style="${status.index >= 3 ? 'display: none;' : ''}">
                                                    <div class="course-title">${lecture.lectureName}</div>
                                                    <div class="course-instructor">${lecture.memberName}</div>
                                                    <div class="course-category">${lecture.lectureCategory}</div>
                                                </a>
                                            </c:forEach>
                                            <c:if test="${fn:length(lectureList) > 3}">
                                                <div class="toggle-courses-btn" onclick="toggleCourses()">
                                                    <span id="toggleText">ÎçîÎ≥¥Í∏∞ (${fn:length(lectureList) - 3}Í∞ú)</span>
                                                    <span id="toggleIcon">‚ñº</span>
                                                </div>
                                            </c:if>
                                        </c:when>
                                        <c:otherwise>
                                            <div style="text-align: center; color: #999; padding: 40px;">
                                                ÏàòÍ∞ïÏ§ëÏù∏ Í∞ïÏùòÍ∞Ä ÏóÜÏäµÎãàÎã§.
                                            </div>
                                        </c:otherwise>
                                    </c:choose>
                                </div>
                            </div>
                        </c:when>
                        <c:when test="${sessionScope.teacherYn eq 'Y'}">
                            <!-- ÌòÑÏû¨ ÏàòÍ∞ïÏ§ëÏù∏ Í∞ïÏùò -->
                            <div class="section">
                                <div class="section-header">
                                    <h2 class="section-title">ÎÇ¥Í∞Ä Îì±Î°ùÌïú Í∞ïÏùò</h2>
                                    <!-- Í≤ÄÏÉâ Î∞ïÏä§Î•º header ÏïàÏúºÎ°ú Ïù¥Îèô -->
                                    <div class="course-search-box">
                                        <input type="text" id="courseSearchInput" placeholder="Í∞ïÏùòÎ™ÖÏùÑ ÏûÖÎ†•ÌïòÏÑ∏Ïöî"
                                               onkeypress="handleCourseSearchEnter(event)">
                                        <button onclick="searchCourses()">üîç</button>
                                    </div>
                                </div>

                                <div class="course-content" id="courseContent">
                                    <c:choose>
                                        <c:when test="${not empty lList}">
                                            <c:forEach items="${lList}" var="lecture" varStatus="status">
                                                <a href="/lecture/details?lectureNo=${lecture.lectureNo}"
                                                   class="course-item ${status.index >= 3 ? 'hidden-course' : ''}"
                                                   style="${status.index >= 3 ? 'display: none;' : ''}">
                                                    <div class="course-title">${lecture.lectureName}</div>
                                                    <div class="course-instructor">${memberInfo.memberName}</div>
                                                    <div class="course-category">${lecture.lectureCategory}</div>
                                                </a>
                                            </c:forEach>
                                            <c:if test="${fn:length(lList) > 3}">
                                                <div class="toggle-courses-btn" onclick="toggleCourses()">
                                                    <span id="toggleText">ÎçîÎ≥¥Í∏∞ (${fn:length(lList) - 3}Í∞ú)</span>
                                                    <span id="toggleIcon">‚ñº</span>
                                                </div>
                                            </c:if>
                                        </c:when>
                                        <c:otherwise>
                                            <div style="text-align: center; color: #999; padding: 40px;">
                                                Îì±Î°ùÌïú Í∞ïÏùòÍ∞Ä ÏóÜÏäµÎãàÎã§.
                                            </div>
                                        </c:otherwise>
                                    </c:choose>
                                </div>
                            </div>
                        </c:when>

                    </c:choose>
                    <c:choose>
                        <c:when test="${sessionScope.teacherYn eq 'Y'}">
                            <div class="section">
                                <a href="/lecture/add" class="menu-item">
                                    <div class="menu-icon">üìö</div>
                                    <div class="menu-text">Í∞ïÏùò Ï∂îÍ∞Ä</div>
                                </a>
                            </div>
                            <div class="section">
                                <a href="javascript:void(0);" onclick="openWithdrawPopup();" class="menu-item">
                                    <div class="menu-icon">üí∞</div>
                                    <div class="menu-text">ÏûîÏï° Ï∂úÍ∏àÌïòÍ∏∞</div>
                                </a>
                            </div>
                        </c:when>
                        <c:when test="${sessionScope.teacherYn eq 'N' && sessionScope.adminYn eq 'N'}">
                            <!-- ÏûîÍ≥† Ï∂©Ï†ÑÌïòÍ∏∞ -->
                            <div class="section">
                                <a href="javascript:void(0);" onclick="openChargePopup();" class="menu-item">
                                    <div class="menu-icon">üí∞</div>
                                    <div class="menu-text">ÏûîÍ≥† Ï∂©Ï†ÑÌïòÍ∏∞</div>
                                </a>
                            </div>
                        </c:when>
                    </c:choose>
                    <!-- ÎÇ¥Í∞Ä ÏûëÏÑ±Ìïú Í≤åÏãúÎ¨º -->
                    <div class="section">
                        <a href="/member/mypost" class="menu-item">
                            <div class="menu-icon">üìù</div>
                            <div class="menu-text">ÎÇ¥Í∞Ä ÏûëÏÑ±Ìïú Í≤åÏãúÎ¨º</div>
                        </a>
                    </div>

                    <!-- ÎÇ¥Í∞Ä ÏûëÏÑ±Ìïú ÎåìÍ∏Ä -->
                    <div class="section">
                        <a href="/member/mycomment" class="menu-item">
                            <div class="menu-icon">üí¨</div>
                            <div class="menu-text">ÎÇ¥Í∞Ä ÏûëÏÑ±Ìïú ÎåìÍ∏Ä</div>
                        </a>
                    </div>

                    <!-- ÎÇ¥ Ï†ïÎ≥¥ ÏàòÏ†ï -->
                    <div class="section">
                        <a href="/member/edit" class="menu-item">
                            <div class="menu-icon">‚öôÔ∏è</div>
                            <div class="menu-text">ÎÇ¥ Ï†ïÎ≥¥ ÏàòÏ†ï</div>
                        </a>
                    </div>

                    <!-- Î°úÍ∑∏ÏïÑÏõÉ -->
                    <div class="section">
                        <a href="/member/logout" class="menu-item">
                            <div class="menu-icon">üö™</div>
                            <div class="menu-text">Î°úÍ∑∏ÏïÑÏõÉ</div>
                        </a>
                    </div>

                    <!-- ÌöåÏõê ÌÉàÌá¥ -->
                    <div class="section">
                        <a href="javascript:void(0);" onclick="deleteMember();" class="menu-item">
                            <div class="menu-icon">‚ö†Ô∏è</div>
                            <div class="menu-text">ÌöåÏõê ÌÉàÌá¥</div>
                        </a>
                    </div>
                </div>
            </div>

            <!-- Ï∂©Ï†Ñ ÌåùÏóÖ -->
            <div class="charge-popup-overlay" id="chargePopupOverlay">
                <div class="charge-popup">
                    <h3 class="charge-popup-title">üí∞ ÏûîÏï° Ï∂©Ï†Ñ</h3>

                    <div class="charge-amount-section">
                        <input type="text" class="charge-amount-input" id="chargeAmountInput"
                               placeholder="Ï∂©Ï†ÑÌï† Í∏àÏï°ÏùÑ ÏûÖÎ†•ÌïòÏÑ∏Ïöî">
                        <div class="charge-amount-buttons">
                            <button class="charge-amount-btn" onclick="setChargeAmount(10000)">10,000Ïõê</button>
                            <button class="charge-amount-btn" onclick="setChargeAmount(30000)">30,000Ïõê</button>
                            <button class="charge-amount-btn" onclick="setChargeAmount(50000)">50,000Ïõê</button>
                            <button class="charge-amount-btn" onclick="setChargeAmount(100000)">100,000Ïõê</button>
                            <button class="charge-amount-btn" onclick="setChargeAmount(300000)">300,000Ïõê</button>
                            <button class="charge-amount-btn" onclick="setChargeAmount(500000)">500,000Ïõê</button>
                        </div>
                    </div>

                    <div class="charge-popup-buttons">
                        <button class="charge-popup-btn cancel" onclick="closeChargePopup()">Ï∑®ÏÜå</button>
                        <button class="charge-popup-btn confirm" onclick="processCharge()">Ï∂©Ï†ÑÌïòÍ∏∞</button>
                    </div>
                </div>
            </div>

            <!-- Ï∂úÍ∏à ÌåùÏóÖ -->
            <div class="charge-popup-overlay" id="withdrawPopupOverlay" style="display: none;">
                <div class="charge-popup">
                    <h3 class="charge-popup-title">üí∏ ÏûîÏï° Ï∂úÍ∏à</h3>

                    <div class="withdraw-form">
                        <!-- ÏùÄÌñâ ÏÑ†ÌÉù -->
                        <div class="form-group" style="margin-bottom: 15px;">
                            <label for="bankSelect" style="display: block; margin-bottom: 5px; font-weight: bold; color: #333;">ÏùÄÌñâ ÏÑ†ÌÉù</label>
                            <select id="bankSelect" style="width: 100%; padding: 12px; border: 1px solid #ddd; border-radius: 5px; font-size: 14px; background: white;">
                                <option value="">ÏùÄÌñâÏùÑ ÏÑ†ÌÉùÌïòÏÑ∏Ïöî</option>
                                <option value="KBÍµ≠ÎØºÏùÄÌñâ">KBÍµ≠ÎØºÏùÄÌñâ</option>
                                <option value="Ïã†ÌïúÏùÄÌñâ">Ïã†ÌïúÏùÄÌñâ</option>
                                <option value="Ïö∞Î¶¨ÏùÄÌñâ">Ïö∞Î¶¨ÏùÄÌñâ</option>
                                <option value="ÌïòÎÇòÏùÄÌñâ">ÌïòÎÇòÏùÄÌñâ</option>
                                <option value="NHÎÜçÌòëÏùÄÌñâ">NHÎÜçÌòëÏùÄÌñâ</option>
                                <option value="IBKÍ∏∞ÏóÖÏùÄÌñâ">IBKÍ∏∞ÏóÖÏùÄÌñâ</option>
                                <option value="Ïπ¥Ïπ¥Ïò§Î±ÖÌÅ¨">Ïπ¥Ïπ¥Ïò§Î±ÖÌÅ¨</option>
                                <option value="ÌÜ†Ïä§Î±ÖÌÅ¨">ÌÜ†Ïä§Î±ÖÌÅ¨</option>
                                <option value="ÏºÄÏù¥Î±ÖÌÅ¨">ÏºÄÏù¥Î±ÖÌÅ¨</option>
                            </select>
                        </div>

                        <!-- Í≥ÑÏ¢åÎ≤àÌò∏ ÏûÖÎ†• -->
                        <div class="form-group" style="margin-bottom: 15px;">
                            <label for="accountNumber" style="display: block; margin-bottom: 5px; font-weight: bold; color: #333;">Í≥ÑÏ¢åÎ≤àÌò∏</label>
                            <input type="text" id="accountNumber" placeholder="Í≥ÑÏ¢åÎ≤àÌò∏Î•º ÏûÖÎ†•ÌïòÏÑ∏Ïöî (- ÏóÜÏù¥)" style="width: 100%; padding: 12px; border: 1px solid #ddd; border-radius: 5px; font-size: 14px;">
                        </div>

                        <!-- Ï∂úÍ∏à Í∏àÏï° -->
                        <div class="form-group" style="margin-bottom: 0;">
                            <label for="withdrawAmountInput" style="display: block; margin-bottom: 5px; font-weight: bold; color: #333;">Ï∂úÍ∏à Í∏àÏï° (ÌòÑÏû¨ ÏûîÏï°: <fmt:formatNumber value="${memberInfo.memberMoney}" pattern="#,###"/>Ïõê)</label>
                            <div class="amount-input-group" style="display: flex; gap: 10px; align-items: center;">
                                <input type="text" class="charge-amount-input" id="withdrawAmountInput" placeholder="Ï∂úÍ∏àÌï† Í∏àÏï°ÏùÑ ÏûÖÎ†•ÌïòÏÑ∏Ïöî" style="flex: 1; height: 46px; padding: 12px; border: 1px solid #ddd; border-radius: 5px; font-size: 14px; margin: 0;">
                                <button class="full-amount-btn" onclick="setFullAmount()" style="height: 46px; padding: 0 15px; background: #28a745; color: white; border: none; border-radius: 5px; cursor: pointer; font-size: 14px; white-space: nowrap;">Ï†ÑÏï°</button>
                            </div>
                        </div>
                    </div>

                    <div class="charge-popup-buttons" style="margin-top: 15px;">
                        <button class="charge-popup-btn cancel" onclick="closeWithdrawPopup()">Ï∑®ÏÜå</button>
                        <button class="charge-popup-btn confirm" onclick="processWithdraw()">Ï∂úÍ∏à Ïã†Ï≤≠</button>
                    </div>
                </div>
            </div>

            <script>
                let chargeAmount = 0;

                // Ï∂©Ï†Ñ Í¥ÄÎ†® Ìï®ÏàòÎì§
                function openChargePopup() {
                    // ÎßàÏù¥ÌéòÏù¥ÏßÄÏóêÏÑú Ï∂©Ï†ÑÌïòÎäî Í≤ÉÏûÑÏùÑ ÏÑúÎ≤ÑÏóê ÏïåÎ¶º (ÏÑ∏ÏÖò Ï†ïÎ¶¨Ïö©)
                    fetch('/member/clearLectureSession', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        }
                    }).then(() => {
                        const popup = document.getElementById('chargePopupOverlay');
                        if (popup) {
                            popup.style.display = 'flex';
                        }
                        chargeAmount = 0;

                        const input = document.getElementById('chargeAmountInput');
                        if (input) {
                            input.value = '';
                        }
                    }).catch(error => {
                        console.error('ÏÑ∏ÏÖò Ï†ïÎ¶¨ Ï§ë Ïò§Î•ò:', error);
                        // Ïò§Î•òÍ∞Ä ÏûàÏñ¥ÎèÑ ÌåùÏóÖÏùÄ Ïó¥Í∏∞
                        const popup = document.getElementById('chargePopupOverlay');
                        if (popup) {
                            popup.style.display = 'flex';
                        }
                    });
                }

                function closeChargePopup() {
                    document.getElementById('chargePopupOverlay').style.display = 'none';
                }

                function setChargeAmount(amount) {
                    chargeAmount = amount;
                    const input = document.getElementById('chargeAmountInput');
                    if (input) {
                        input.value = amount.toLocaleString();
                    }
                }

                function processCharge() {
                    const input = document.getElementById('chargeAmountInput');
                    const inputValue = input ? input.value : '';
                    const inputAmount = inputValue.replace(/,/g, '');
                    chargeAmount = parseInt(inputAmount) || chargeAmount;

                    if (!chargeAmount || chargeAmount < 1000) {
                        alert('ÏµúÏÜå 1,000Ïõê Ïù¥ÏÉÅ Ï∂©Ï†ÑÌï¥Ï£ºÏÑ∏Ïöî.');
                        return;
                    }

                    // ÏÑúÎ≤ÑÏóêÏÑú Í≤∞Ï†ú Ï†ïÎ≥¥Î•º Í∞ÄÏ†∏ÏôÄÏÑú ÌÜ†Ïä§ÌéòÏù¥Î®ºÏ∏† Ìò∏Ï∂ú
                    requestChargePayment(chargeAmount);
                }

                // ÏÑúÎ≤ÑÏóêÏÑú Í≤∞Ï†ú Ï†ïÎ≥¥Î•º Í∞ÄÏ†∏ÏôÄÏÑú ÌÜ†Ïä§ÌéòÏù¥Î®ºÏ∏† Ìò∏Ï∂ú
                function requestChargePayment(amount) {
                    fetch('/purchase/toss/charge', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({
                            amount: amount
                        })
                    })
                        .then(response => response.json())
                        .then(data => {
                            if (data.success) {
                                const tossPayments = TossPayments(data.clientKey);

                                tossPayments.requestPayment('NORMAL', {
                                    amount: data.amount,
                                    orderId: data.orderId,
                                    orderName: data.orderName,
                                    successUrl: data.successUrl,
                                    failUrl: data.failUrl,
                                })
                                    .catch(function (error) {
                                        if (error.code === 'USER_CANCEL') {
                                            console.log('Ï∂©Ï†ÑÏù¥ Ï∑®ÏÜåÎêòÏóàÏäµÎãàÎã§.');
                                        } else {
                                            alert('Ï∂©Ï†Ñ ÏöîÏ≤≠ Ïã§Ìå®: ' + error.message);
                                        }
                                    });
                            } else {
                                alert(data.message || 'Ï∂©Ï†Ñ ÏöîÏ≤≠Ïóê Ïã§Ìå®ÌñàÏäµÎãàÎã§.');
                            }
                        })
                        .catch(error => {
                            console.error('Error:', error);
                            alert('Ï∂©Ï†Ñ ÏöîÏ≤≠ Ï§ë Ïò§Î•òÍ∞Ä Î∞úÏÉùÌñàÏäµÎãàÎã§.');
                        });
                }

                // Ï∂úÍ∏à Í¥ÄÎ†® Ìï®ÏàòÎì§
                function openWithdrawPopup() {
                    const popup = document.getElementById('withdrawPopupOverlay');
                    if (popup) {
                        popup.style.display = 'flex';
                    }
                    
                    // Ìèº Ï¥àÍ∏∞Ìôî
                    document.getElementById('bankSelect').value = '';
                    document.getElementById('accountNumber').value = '';
                    document.getElementById('withdrawAmountInput').value = '';
                }

                function closeWithdrawPopup() {
                    document.getElementById('withdrawPopupOverlay').style.display = 'none';
                }

                function setFullAmount() {
                    const currentBalance = ${memberInfo.memberMoney};
                    const input = document.getElementById('withdrawAmountInput');
                    if (input) {
                        input.value = currentBalance.toLocaleString();
                    }
                }

                function processWithdraw() {
                    const bank = document.getElementById('bankSelect').value;
                    const accountNumber = document.getElementById('accountNumber').value;
                    const withdrawInput = document.getElementById('withdrawAmountInput');
                    const withdrawAmount = parseInt(withdrawInput.value.replace(/,/g, '')) || 0;
                    
                    // Ïú†Ìö®ÏÑ± Í≤ÄÏÇ¨
                    if (!bank || bank.trim() === '') {
                        alert('ÏùÄÌñâÏùÑ ÏÑ†ÌÉùÌï¥Ï£ºÏÑ∏Ïöî.');
                        return;
                    }
                    
                    if (!accountNumber || accountNumber.trim() === '') {
                        alert('Í≥ÑÏ¢åÎ≤àÌò∏Î•º ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî.');
                        return;
                    }
                    
                    if (!withdrawAmount || withdrawAmount < 1000) {
                        alert('ÏµúÏÜå 1,000Ïõê Ïù¥ÏÉÅ Ï∂úÍ∏à Í∞ÄÎä•Ìï©ÎãàÎã§.');
                        return;
                    }
                    
                    const currentBalance = ${memberInfo.memberMoney};
                    if (withdrawAmount > currentBalance) {
                        alert('ÏûîÏï°Ïù¥ Î∂ÄÏ°±Ìï©ÎãàÎã§.');
                        return;
                    }
                    
                    if (!confirm(bank + '\nÍ≥ÑÏ¢åÎ≤àÌò∏: ' + accountNumber + '\nÏ∂úÍ∏àÍ∏àÏï°: ' + withdrawAmount.toLocaleString() + 'Ïõê\n\nÏúÑ Ï†ïÎ≥¥Î°ú Ï∂úÍ∏àÌïòÏãúÍ≤†ÏäµÎãàÍπå?')) {
                        return;
                    }
                    
                    // ÏÑúÎ≤ÑÎ°ú Ï∂úÍ∏à ÏöîÏ≤≠
                    fetch('/member/withdraw', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({
                            bank: bank,
                            accountNumber: accountNumber,
                            amount: withdrawAmount
                        })
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            alert('Ï∂úÍ∏à Ïã†Ï≤≠Ïù¥ ÏôÑÎ£åÎêòÏóàÏäµÎãàÎã§.\nÏ≤òÎ¶¨ÍπåÏßÄ 1-2Ïùº ÏÜåÏöîÎê©ÎãàÎã§.');
                            closeWithdrawPopup();
                            window.location.reload(); // ÏûîÏï° ÏóÖÎç∞Ïù¥Ìä∏Î•º ÏúÑÌï¥ ÏÉàÎ°úÍ≥†Ïπ®
                        } else {
                            alert(data.message || 'Ï∂úÍ∏à Ïã†Ï≤≠Ïóê Ïã§Ìå®ÌñàÏäµÎãàÎã§.');
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        alert('Ï∂úÍ∏à Ïã†Ï≤≠ Ï§ë Ïò§Î•òÍ∞Ä Î∞úÏÉùÌñàÏäµÎãàÎã§.');
                    });
                }

                // Ï∂©Ï†Ñ/Ï∂úÍ∏à Í∏àÏï° ÏûÖÎ†• Ïãú Ìè¨Îß∑ÌåÖ
                document.addEventListener('DOMContentLoaded', function () {
                    const chargeInput = document.getElementById('chargeAmountInput');
                    if (chargeInput) {
                        chargeInput.addEventListener('input', function (e) {
                            let value = e.target.value.replace(/[^0-9]/g, '');
                            if (value) {
                                e.target.value = parseInt(value).toLocaleString();
                            }
                        });
                    }
                    
                    const withdrawInput = document.getElementById('withdrawAmountInput');
                    if (withdrawInput) {
                        withdrawInput.addEventListener('input', function (e) {
                            let value = e.target.value.replace(/[^0-9]/g, '');
                            if (value) {
                                const numericValue = parseInt(value);
                                const currentBalance = ${memberInfo.memberMoney};
                                
                                // ÌòÑÏû¨ ÏûîÏï°Î≥¥Îã§ ÌÅ∞ Í∏àÏï°ÏùÄ ÏûÖÎ†• Î∂àÍ∞Ä
                                if (numericValue > currentBalance) {
                                    e.target.value = currentBalance.toLocaleString();
                                } else {
                                    e.target.value = numericValue.toLocaleString();
                                }
                            }
                        });
                    }
                    
                    const accountInput = document.getElementById('accountNumber');
                    if (accountInput) {
                        accountInput.addEventListener('input', function (e) {
                            e.target.value = e.target.value.replace(/[^0-9]/g, '');
                        });
                    }

                    // URL ÌååÎùºÎØ∏ÌÑ∞ÏóêÏÑú Ï∂©Ï†Ñ Í≤∞Í≥º ÌôïÏù∏
                    const urlParams = new URLSearchParams(window.location.search);
                    const chargeSuccess = urlParams.get('chargeSuccess');
                    const chargeAmount = urlParams.get('chargeAmount');

                    if (chargeSuccess === 'true' && chargeAmount) {
                        // Ï∂©Ï†Ñ ÏÑ±Í≥µ ÌåùÏóÖ
                        alert('üí∞ Ï∂©Ï†ÑÏù¥ ÏôÑÎ£åÎêòÏóàÏäµÎãàÎã§!\nÏ∂©Ï†Ñ Í∏àÏï°: ‚Ç©' + parseInt(chargeAmount).toLocaleString() + 'Ïõê');
                        // URLÏóêÏÑú ÌååÎùºÎØ∏ÌÑ∞ Ï†úÍ±∞
                        window.history.replaceState({}, document.title, window.location.pathname);
                        // ÌéòÏù¥ÏßÄ ÏÉàÎ°úÍ≥†Ïπ®ÌïòÏó¨ ÏûîÏï° ÏóÖÎç∞Ïù¥Ìä∏
                        window.location.reload();
                    } else if (chargeSuccess === 'false') {
                        // Ï∂©Ï†Ñ Ïã§Ìå® ÌåùÏóÖ
                        alert('‚ùåÏ∂©Ï†ÑÏóê Ïã§Ìå®ÌñàÏäµÎãàÎã§.\nÎã§Ïãú ÏãúÎèÑÌï¥Ï£ºÏÑ∏Ïöî.');
                        // URLÏóêÏÑú ÌååÎùºÎØ∏ÌÑ∞ Ï†úÍ±∞
                        window.history.replaceState({}, document.title, window.location.pathname);
                    }
                });

                // ÌöåÏõê ÌÉàÌá¥ Ìï®Ïàò
                function deleteMember() {
                    if (confirm('Ï†ïÎßêÎ°ú ÌöåÏõê ÌÉàÌá¥Î•º ÌïòÏãúÍ≤†ÏäµÎãàÍπå?\n\nÌÉàÌá¥ Ïãú Î™®Îì† Îç∞Ïù¥ÌÑ∞Í∞Ä ÏÇ≠Ï†úÎêòÎ©∞ Î≥µÍµ¨Ìï† Ïàò ÏóÜÏäµÎãàÎã§.')) {
                        const memberId = '${sessionScope.loginId}';

                        fetch('/member/delete', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/x-www-form-urlencoded',
                            },
                            body: 'memberId=' + encodeURIComponent(memberId)
                        })
                            .then(response => {
                                if (response.ok) {
                                    alert('ÌöåÏõê ÌÉàÌá¥Í∞Ä ÏôÑÎ£åÎêòÏóàÏäµÎãàÎã§.');
                                    // Î°úÍ∑∏ÏïÑÏõÉ Ï≤òÎ¶¨ Î∞è ÏÑ∏ÏÖò Ï¥àÍ∏∞Ìôî
                                    window.location.href = '/member/logout';
                                } else {
                                    alert('ÌöåÏõê ÌÉàÌá¥ Ï§ë Ïò§Î•òÍ∞Ä Î∞úÏÉùÌñàÏäµÎãàÎã§.');
                                }
                            })
                            .catch(error => {
                                console.error('Error:', error);
                                alert('ÌöåÏõê ÌÉàÌá¥ ÏöîÏ≤≠ Ï§ë Ïò§Î•òÍ∞Ä Î∞úÏÉùÌñàÏäµÎãàÎã§.');
                            });
                    }
                }

                // Í∞ïÏùò Î™©Î°ù ÌÜ†Í∏Ä Ìï®Ïàò
                function toggleCourses() {
                    const hiddenCourses = document.querySelectorAll('.hidden-course');
                    const toggleBtn = document.querySelector('.toggle-courses-btn');
                    const toggleText = document.getElementById('toggleText');
                    const toggleIcon = document.getElementById('toggleIcon');

                    let isExpanded = toggleBtn.classList.contains('expanded');

                    if (isExpanded) {
                        // Ï†ëÍ∏∞
                        hiddenCourses.forEach(course => {
                            course.style.display = 'none';
                        });
                        toggleText.textContent = 'ÎçîÎ≥¥Í∏∞ (' + hiddenCourses.length + 'Í∞ú)';
                        toggleIcon.textContent = '‚ñº';
                        toggleBtn.classList.remove('expanded');
                    } else {
                        // ÌéºÏπòÍ∏∞
                        hiddenCourses.forEach(course => {
                            course.style.display = 'flex';
                        });
                        toggleText.textContent = 'Ï†ëÍ∏∞';
                        toggleIcon.textContent = '‚ñ≤';
                        toggleBtn.classList.add('expanded');
                    }
                }

                // Í∞ïÏùò Í≤ÄÏÉâ Í¥ÄÎ†® Ìï®ÏàòÎì§
                let allCourses = []; // Ï†ÑÏ≤¥ Í∞ïÏùò Îç∞Ïù¥ÌÑ∞ Ï†ÄÏû•

                // ÌéòÏù¥ÏßÄ Î°úÎìú Ïãú Ï†ÑÏ≤¥ Í∞ïÏùò Îç∞Ïù¥ÌÑ∞ Ï†ÄÏû•
                document.addEventListener('DOMContentLoaded', function () {
                    // Í∏∞Ï°¥ Í∞ïÏùò ÏöîÏÜåÎì§ÏùÑ Î∞∞Ïó¥Î°ú Ï†ÄÏû•
                    const courseElements = document.querySelectorAll('.course-item');
                    courseElements.forEach(course => {
                        allCourses.push({
                            element: course.cloneNode(true),
                            title: course.querySelector('.course-title').textContent.toLowerCase(),
                            instructor: course.querySelector('.course-instructor').textContent.toLowerCase(),
                            category: course.querySelector('.course-category').textContent.toLowerCase()
                        });
                    });
                });

                function searchCourses() {
                    const searchTerm = document.getElementById('courseSearchInput').value.toLowerCase().trim();
                    filterCourses(searchTerm);
                }

                function handleCourseSearchEnter(event) {
                    if (event.key === 'Enter') {
                        searchCourses();
                    }
                }

                function filterCourses(searchTerm) {
                    const courseContent = document.getElementById('courseContent');

                    if (!searchTerm) {
                        // Í≤ÄÏÉâÏñ¥Í∞Ä ÏóÜÏúºÎ©¥ ÏõêÎûò ÏÉÅÌÉúÎ°ú Î≥µÏõê
                        restoreOriginalCourses();
                        return;
                    }

                    // Í≤ÄÏÉâ Í≤∞Í≥º ÌïÑÌÑ∞ÎßÅ
                    const filteredCourses = allCourses.filter(course =>
                        course.title.includes(searchTerm) ||
                        course.instructor.includes(searchTerm) ||
                        course.category.includes(searchTerm)
                    );

                    // Í∏∞Ï°¥ Í∞ïÏùò Î™©Î°ù Ï†úÍ±∞
                    const existingCourses = courseContent.querySelectorAll('.course-item');
                    existingCourses.forEach(course => course.remove());

                    // ÌÜ†Í∏Ä Î≤ÑÌäº Ï†úÍ±∞
                    const toggleBtn = courseContent.querySelector('.toggle-courses-btn');
                    if (toggleBtn) toggleBtn.remove();

                    if (filteredCourses.length > 0) {
                        // ÌïÑÌÑ∞ÎßÅÎêú Í∞ïÏùòÎì§ ÌëúÏãú
                        filteredCourses.forEach(course => {
                            const courseElement = course.element.cloneNode(true);
                            courseElement.style.display = 'flex';
                            courseElement.classList.remove('hidden-course');
                            courseContent.appendChild(courseElement);
                        });
                    } else {
                        // Í≤ÄÏÉâ Í≤∞Í≥ºÍ∞Ä ÏóÜÏùÑ Îïå
                        const noResult = document.createElement('div');
                        noResult.style.cssText = 'text-align: center; color: #999; padding: 40px;';
                        noResult.textContent = 'Í≤ÄÏÉâ Í≤∞Í≥ºÍ∞Ä ÏóÜÏäµÎãàÎã§.';
                        courseContent.appendChild(noResult);
                    }
                }

                function restoreOriginalCourses() {
                    const courseContent = document.getElementById('courseContent');

                    // Í∏∞Ï°¥ ÎÇ¥Ïö© Ï†úÍ±∞
                    courseContent.innerHTML = '';

                    if (allCourses.length > 0) {
                        // ÏõêÎûò Í∞ïÏùòÎì§ Î≥µÏõê
                        allCourses.forEach((course, index) => {
                            const courseElement = course.element.cloneNode(true);
                            if (index >= 3) {
                                courseElement.classList.add('hidden-course');
                                courseElement.style.display = 'none';
                            } else {
                                courseElement.style.display = 'flex';
                            }
                            courseContent.appendChild(courseElement);
                        });

                        // ÌÜ†Í∏Ä Î≤ÑÌäº Î≥µÏõê (4Í∞ú Ïù¥ÏÉÅÏùº ÎïåÎßå)
                        if (allCourses.length > 3) {
                            const toggleBtn = document.createElement('div');
                            toggleBtn.className = 'toggle-courses-btn';
                            toggleBtn.onclick = toggleCourses;
                            toggleBtn.innerHTML = '<span id="toggleText">ÎçîÎ≥¥Í∏∞ (' + (allCourses.length - 3) + 'Í∞ú)</span><span id="toggleIcon">‚ñº</span>';
                            courseContent.appendChild(toggleBtn);
                        }
                    } else {
                        const noLecture = document.createElement('div');
                        noLecture.style.cssText = 'text-align: center; color: #999; padding: 40px;';
                        noLecture.textContent = 'ÏàòÍ∞ïÏ§ëÏù∏ Í∞ïÏùòÍ∞Ä ÏóÜÏäµÎãàÎã§.';
                        courseContent.appendChild(noLecture);
                    }
                }
            </script>

            <!-- Footer Include -->
            <jsp:include page="../common/footer.jsp"/>
        </div>
    </body>
</html>